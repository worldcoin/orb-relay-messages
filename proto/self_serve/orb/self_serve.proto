syntax = "proto3";

package self_serve.orb;

message OrbSelfServeModeMessage {
  oneof message {
    NoState no_state = 1;
    SelfServeStatus self_serve_status = 2;
    CaptureStarted capture_started = 3;
    CaptureTriggerTimeout capture_trigger_timeout = 4;
    CaptureEnded capture_ended = 5;
    SignupEnded signup_ended = 6;
    AgeVerificationRequiredFromOperator age_verification_required_from_operator = 7;
  }
}

message NoState {}
message SelfServeStatus {
  bool is_self_serve_enabled = 1;
}
message CaptureStarted {}
message CaptureTriggerTimeout {}
message CaptureEnded {
  enum FailureFeedbackType {
    UNKNOWN = 0;
    FACE_OCCLUSION_OR_POOR_LIGHTING = 1;
    TOO_FAR = 2;
    TOO_CLOSE = 3;
    EYES_OCCLUSION = 4;
  }

  bool success = 1;
  repeated FailureFeedbackType failure_feedback = 2;
}
message SignupEnded {
  enum FailureFeedbackType {
    UNKNOWN = 0;
    CONTACT_LENSES = 1;
    EYE_GLASSES = 2;
    MASK = 3;
    FACE_OCCLUSION = 4;
    MULTIPLE_FACES = 5;
    EYES_OCCLUSION = 6;
    HEAD_POSE = 7;
    UNDERAGED = 8;
    SERVER_ERROR = 9;
  }

  bool success = 1;
  repeated FailureFeedbackType failure_feedback = 2;
}
message AgeVerificationRequiredFromOperator {}
